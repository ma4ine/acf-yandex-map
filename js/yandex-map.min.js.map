{"version":3,"sources":["yandex-map.js"],"names":["$","ymaps","ready","each","index","value","id","attr","undefined","window","$params","parseJSON","$map","Map","zoom","center","center_lat","center_lng","controls","remove","marks","mark","place_mark","type","Placemark","coords","balloonContent","content","Circle","circle_size","opacity","fillOpacity","fillColor","strokeColor","strokeOpacity","strokeWidth","geoObjects","add","load_data","data_type","plugin_url","ajax","url","done","data","$object_manager","objects","clusters","console","log","fail","error","ObjectManager","clusterize","gridSize","options","set","preset","balloonMaxWidth","on","jQuery"],"mappings":"CAAA,SAAWA,GAIPC,MAAMC,MAAM,WAEIF,EAAE,eACRG,KAAK,SAAUC,EAAOC,GACxB,IACIC,EADcN,EAAEK,GACCE,KAAK,MAE1B,QAAWC,IAAPF,QAAmCE,IAAfC,OAAOH,GAAmB,CAE9C,IAAII,EAAUV,EAAEW,UAAUF,OAAOH,GAAY,QAEzCM,EAAO,IAAIX,MAAMY,IAAIP,EAAI,CACzBQ,KAAMJ,EAAQI,KACdC,OAAQ,CAACL,EAAQM,WAAYN,EAAQO,aAGtC,IA2CH,GAvCAL,EAAKM,SAASC,OAAO,kBACrBP,EAAKM,SAASC,OAAO,iBACrBP,EAAKM,SAASC,OAAO,sBAEAX,MAAjBE,EAAQU,OAERpB,EAAEU,EAAQU,OAAOjB,KAAK,SAAUC,EAAOiB,GACnC,IAAIC,EAAa,KAIbA,EAFa,SAAbD,EAAKE,KAEQ,IAAItB,MAAMuB,UAAUH,EAAKI,OAAQ,CAC1CC,eAAgBL,EAAKM,UAKZ,IAAI1B,MAAM2B,OAAO,CAC1BP,EAAKI,OACLJ,EAAKQ,aACN,CACCH,eAAgBL,EAAKM,SACtB,CACCG,QAAS,GACTC,YAAa,GACbC,UAAW,YACXC,YAAa,UACbC,cAAe,GACfC,YAAa,IAKrBvB,EAAKwB,WAAWC,IAAIf,KAMjB,cAAPhB,EAAoB,CAepB,SAASgC,EAAUC,GAEf,IAAIC,EAAa/B,OAAOH,GAAgB,WAExCN,EAAEyC,KAAK,CACHC,IAAKF,EAAa,aAAeD,EAAY,UAEhDI,KAAK,SAASC,GACXC,gBAAgB1B,OAAO0B,gBAAgBC,SACvCD,gBAAgB1B,OAAO0B,gBAAgBE,UACvCF,gBAAgBR,IAAIO,GACpBI,QAAQC,IAAI,qBAEfC,KAAK,WACFF,QAAQG,MAAM,oBA3BtBN,gBAAkB,IAAI5C,MAAMmD,cAAc,CACtCC,YAAY,EACZC,SAAU,KAEdT,gBAAgBC,QAAQS,QAAQC,IAAI,CAChCC,OAAQ,4BACRC,gBAAiB,MAErBb,gBAAgBE,SAASQ,QAAQC,IAAI,CACjCC,OAAQ,mCAEZ7C,EAAKwB,WAAWC,IAAIQ,iBAoBpB7C,EAAE,iBAAiB2D,GAAG,QAAS,WAC3BrB,EAAU,iBAGdtC,EAAE,sBAAsB2D,GAAG,QAAS,WAChCrB,EAAU,4BArGlC,CA+GGsB","file":"yandex-map.min.js","sourcesContent":["(function ($) {\n\n    // 'use strict';\n\n    ymaps.ready(function () {\n\n        var $maps = $('.yandex-map');\n        $maps.each(function (index, value) {\n            var $mapElement = $(value),\n                id = $mapElement.attr('id');\n\n            if (id !== undefined && window[id] !== undefined) {\n\n                var $params = $.parseJSON(window[id]['params']);\n\n                var $map = new ymaps.Map(id, {\n                    zoom: $params.zoom,\n                    center: [$params.center_lat, $params.center_lng],\n                    // type: 'yandex#' + $params.type,\n                    // behaviors: ['dblClickZoom', 'multiTouch', 'drag']\n                }, {\n                    // minZoom: 10\n                });\n\n                $map.controls.remove('trafficControl');\n                $map.controls.remove('searchControl');\n                $map.controls.remove('geolocationControl');\n\n                if ($params.marks != undefined) {\n                   \n                    $($params.marks).each(function (index, mark) {\n                        var place_mark = null;\n\n                        if (mark.type == 'Point') { // create placemark\n\n                            place_mark = new ymaps.Placemark(mark.coords, {\n                                balloonContent: mark.content\n                            });\n\n                        } else { // if mark is circle\n\n                            place_mark = new ymaps.Circle([\n                                mark.coords,\n                                mark.circle_size\n                            ], {\n                                balloonContent: mark.content\n                            }, {\n                                opacity: 0.5,\n                                fillOpacity: 0.1,\n                                fillColor: \"#DB709377\",\n                                strokeColor: \"#990066\",\n                                strokeOpacity: 0.7,\n                                strokeWidth: 5\n                            });\n\n                        }\n\n                        $map.geoObjects.add(place_mark);\n                    });\n\n                }\n\n\n                if (id === 'ymap_full') {\n\n                    $object_manager = new ymaps.ObjectManager({\n                        clusterize: true,\n                        gridSize: 32\n                    });\n                    $object_manager.objects.options.set({\n                        preset: 'islands#darkOrangeDotIcon',\n                        balloonMaxWidth: 235\n                    });\n                    $object_manager.clusters.options.set({\n                        preset: 'islands#darkOrangeClusterIcons',\n                    });\n                    $map.geoObjects.add($object_manager);\n\n                    function load_data(data_type) {\n\n                        var plugin_url = window[id]['plugin_url']\n\n                        $.ajax({\n                            url: plugin_url + 'json/data-' + data_type + '.json'\n                        })\n                        .done(function(data) {\n                            $object_manager.remove($object_manager.objects);\n                            $object_manager.remove($object_manager.clusters);\n                            $object_manager.add(data);\n                            console.log('Map data loaded');\n                        })\n                        .fail(function() {\n                            console.error(\"Map data error\");\n                        });\n                    }\n\n                    $('a.js-map-link').on('click', function() {\n                        load_data('land-tajtsy');\n                    });\n\n                    $('button.js-map-link').on('click', function() {\n                        load_data('land-vsevolozhsk');\n                    });\n\n                }\n\n            }\n        });\n\n    });\n\n})(jQuery);"]}