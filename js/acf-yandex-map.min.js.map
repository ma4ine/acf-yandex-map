{"version":3,"sources":["acf-yandex-map.js"],"names":["$","mark_style_house_green","iconLayout","iconImageHref","iconImageSize","iconImageOffset","mark_style_house_orange","polygon_style_green","fillColor","strokeColor","strokeWidth","opacity","polygon_style_orange","pluginURL","acf_yandex_locale","blog_url","template_url","plugin_url","postID","post_id","term_slug","post_type","term_id","is_project","initialize_field","$el","$element","$input","$params","$collection","$map_active","$map","$project","find","undefined","console","error","map_init_fail","parseJSON","val","log","data","when","get","response","features","length","each","index","id","content","type","geometry","coords","coordinates","done","ymaps","ready","map_init","fail","empty","destroy","Map","zoom","center","center_lat","center_lng","minZoom","controls","remove","behaviors","disable","copyrights","add","events","e","create_mark","save_map","zoom_control","control","ZoomControl","event","top","left","clear_button","Button","btn_clear_all","title","btn_clear_all_hint","options","selectOnClick","geoObjects","mark","removeAttr","right","geo_button","location","geocode","results","then","res","geo_object","getCoordinates","bounds","properties","setBounds","checkZoomRange","geocode_location","text","GeoObjectCollection","preset","place_mark","marker_type","toLowerCase","mark_id","edit_url","window","origin","place_mark_content","balloonContentBody","hintContent","Placemark","Polygon","import_mark","marks","draggable","editorDrawingCursor","editorMaxPoints","editor","startDrawing","Monitor","state","newValue","attr","getZoom","getCenter","getType","split","_type","push","JSON","stringify","acf","add_action","get_fields","this","document","on","postbox","jQuery"],"mappings":"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","file":"acf-yandex-map.min.js","sourcesContent":["(function ($) {\n\n    'use strict';\n\n    /**\n     * Include common vars\n     */\n    // Common vars\n    \n    var mark_style_house_green = {\n        iconLayout: 'default#image',\n        iconImageHref: '../svg/map/mark-house-2.svg',\n        iconImageSize: [36, 36],\n        iconImageOffset: [-6, -18]\n    };\n    \n    var mark_style_house_orange = {\n        iconLayout: 'default#image',\n        iconImageHref: '../svg/map/mark-house-1.svg',\n        iconImageSize: [36, 36],\n        iconImageOffset: [-6, -18]\n    };\n    \n    var polygon_style_green = {\n        fillColor: '#44A147',\n        strokeColor: '#18803F',\n        strokeWidth: 2,\n        opacity: 0.7\n    };\n    \n    var polygon_style_orange = {\n        fillColor: 'rgba(0,0,0,0.00)',\n        strokeColor: '#EC6B23',\n        strokeWidth: 2,\n        opacity: 0.7\n    };\n\n    /**\n     * Backend vars\n     */\n    var blogURL = acf_yandex_locale.blog_url;\n    var templateURL = acf_yandex_locale.template_url;\n    var pluginURL = acf_yandex_locale.plugin_url;\n    var postID = acf_yandex_locale.post_id;\n    var postType = acf_yandex_locale.post_type;\n    var termID = acf_yandex_locale.term_id;\n    var term_slug = acf_yandex_locale.term_slug;\n    var is_project = (acf_yandex_locale.is_project) ? true : false;\n\n    /**\n     * Initialize admin interface\n     *\n     * @param {element} $el\n     * @returns {boolean}\n     */\n    function initialize_field($el) {\n\n        /**\n         * Element for map init\n         * @type {element}\n         */\n        var $element;\n\n        /**\n         * Hidden data input\n         * @type {element}\n         */\n        var $input;\n\n        /**\n         * Saved data or default\n         *\n         * @param {float} $params.center_lat\n         * @param {float} $params.center_lng\n         * @param {string} $params.type\n         * @param {int} $params.zoom\n         * @param {Object[]} $params.marks\n         *\n         * @type {object}\n         */\n        var $params;\n\n        /**\n         * Yandex map object\n         *\n         * @type {Object}\n         */\n        var $map = null;\n\n        /**\n         * Project objects\n         *\n         * @type {array}\n         */\n        var $project = [];\n\n        /**\n         * Project collection\n         *\n         * @type {object}\n         */\n        var $collection;\n\n        /**\n         * Project collection\n         *\n         * @type {boolean}\n         */\n        var $map_active;\n\n        /// Init fields\n\n        $element = $($el).find('.map');\n        $input = ($el).find('.map-input');\n\n        if ($element == undefined || $input == undefined) {\n            console.error(acf_yandex_locale.map_init_fail);\n            return false;\n        }\n\n        /// Init params\n\n        $params = $.parseJSON($($input).val());\n\n        /// Import data & map init\n\n        if ( (term_slug != 'no-project' && term_slug != undefined) || is_project ) {\n\n            console.log('Import start');\n\n            console.log(term_slug);\n\n            var data = pluginURL + 'json/land-' + term_slug + '.json';\n\n            $.when(\n\n                $.get(data, function(response) {\n\n                    if ( response.features.length > 0 ) {\n\n                        $.each(response.features, function(index, val) {\n                            $project[index] = {\n                                \"id\": val.id,\n                                \"content\": val.id,\n                                \"type\": val.geometry.type,\n                                \"coords\": val.geometry.coordinates\n                            };\n                        });\n\n                    } else {\n\n                        console.error('Data import error!');\n\n                    }\n\n                })\n\n            ).done(function() {\n\n                console.log('Import success & map start');\n\n                ymaps.ready(function () {\n                    // let's go\n                    map_init();\n                });\n\n            }).fail(function() {\n\n                console.error('Data import error!');\n\n                console.log('Just map start');\n\n                ymaps.ready(function () {\n                    // let's go\n                    map_init();\n                });\n\n            });\n\n        } else {\n\n            console.log('Just map start');\n\n            ymaps.ready(function () {\n                // let's go\n                map_init();\n            });\n\n        };\n\n        /**\n         * Initialization Map\n         */\n        function map_init() {\n\n            $element.empty();\n\n            if ($map != null) {\n                $map.destroy();\n                $map = null;\n                $input.val('');\n            }\n\n            $map = new ymaps.Map($element[0], {\n                zoom: $params.zoom,\n                center: [$params.center_lat, $params.center_lng],\n                type: 'yandex#' + $params.type\n            }, {\n                minZoom: 10\n            });\n\n            $map.controls.remove('trafficControl');\n            $map.controls.remove('fullscreenControl');\n            $map.controls.remove('searchControl');\n            $map.controls.remove('geolocationControl')\n            $map.behaviors.disable('scrollZoom');\n            $map.copyrights.add('&copy; DKI ');\n\n            if (!is_project) {\n                $map.events.add('click', function (e) {\n                    if ($map_active) {\n                        create_mark(e.get('coords'));\n                        save_map();\n                    }\n                });\n            }\n\n            $map.events.add('typechange', function (e) {\n                save_map();\n            });\n\n            $map.events.add('boundschange', function () {\n                save_map();\n            });\n\n            /// Zoom Control\n\n            var zoom_control = new ymaps.control.ZoomControl();\n            zoom_control.events.add('zoomchange', function (event) {\n                save_map();\n            });\n\n            $map.controls.add(zoom_control, {top: 75, left: 5});\n\n            /// Clear all button\n\n            var clear_button = new ymaps.control.Button({\n                data: {\n                    content: acf_yandex_locale.btn_clear_all,\n                    title: acf_yandex_locale.btn_clear_all_hint\n                },\n                options: {\n                    selectOnClick: false\n                }\n            });\n\n            clear_button.events.add('click', function () {\n                $map.geoObjects.each(function (mark) {\n                    if (mark.geometry != null) { // if not collection\n                        $map.geoObjects.remove(mark);\n                    };\n                });\n                $map_active = true;\n                $('.marker-type').removeAttr('disabled');\n                save_map();\n            });\n\n            if (!is_project) {\n                $map.controls.add(clear_button, {top: 5, right: 5});\n            };\n\n            /// Geocoding button\n\n            var geo_button = new ymaps.control.Button('Найти');\n\n            geo_button.events.add('click', function () {\n                // remove object mark\n                $map.geoObjects.each(function (mark) {\n                    if (mark.geometry != null) { // if not collection\n                        $map.geoObjects.remove(mark);\n                    };\n                });\n                // get address\n                var location = \n                    $('[data-name=\"location-district\"] input').val() + ' ' +\n                    $('[data-name=\"location-city\"] select option[selected=\"selected\"]').text() + ' ' + \n                    $('[data-name=\"location-address\"] input').val();\n                // use gecoder\n                geocode_location(location);\n                // save map\n                save_map();\n            });\n\n            if (!is_project) {\n                $map.controls.add(geo_button);\n            };\n\n            /// Collection\n\n            $collection = new ymaps.GeoObjectCollection(null, {\n                preset: 'islands#yellowIcon'\n            });\n\n            /// Marks import\n\n            $($project).each(function(index, mark) {\n                if (mark.id != postID) { // if not this post\n                    import_mark(mark.coords, mark.type, mark.id);\n                }\n            });\n\n            /// Import load\n\n            $map.geoObjects.add($collection);\n\n            /// Marks load\n\n            $($params.marks).each(function (index, mark) {\n                create_mark(mark.coords, mark.type, mark.id, mark.content);\n            });\n\n        }\n\n        /**\n         * Import geo mark\n         *\n         * @param {Array} coords\n         * @param {int} term\n         * @param {int} id\n         */\n        function import_mark(coords, type, id) {\n\n            var place_mark = null;\n            var marker_type = type.toLowerCase();\n            var mark_id = id;\n            var edit_url = window.location.origin + '/wp-admin/post.php?post=' + mark_id + '&action=edit';\n\n            var place_mark_content = {\n                balloonContentBody: '<span>Объект №' + mark_id + '</span><br><a href=\"' + edit_url + '\">Редактировать</a>',\n                hintContent: mark_id\n            }\n\n            if (marker_type == 'point') { // create placemark\n\n                place_mark = new ymaps.Placemark(\n                    coords,\n                    place_mark_content,\n                    mark_style_house_orange\n                );\n\n                $collection.add(place_mark);\n\n            } else if (marker_type == 'polygon') {\n\n                place_mark = new ymaps.Polygon(\n                    [coords],\n                    place_mark_content,\n                    polygon_style_orange\n                );\n\n                $collection.add(place_mark);\n\n            } else {\n\n                console.log('Object ' + id + ' without coordinates');\n\n            }\n        }\n\n        /**\n         * Create geo mark\n         *\n         * @param {Array} coords\n         * @param {string} type Point type, Point\n         * @param {int} id\n         * @param {string} content\n         */\n        function create_mark(coords, type, id, content) {\n\n            var place_mark = null;\n            var marker_type = (type != null) ? type.toLowerCase() : $($el).find('.marker-type').val();\n\n            console.log(marker_type);\n\n            var mark_id = id;\n            if (id == undefined && $params.marks.length == 0)\n                mark_id = 1;\n            else\n                mark_id = (id == undefined) ? ($params.marks[$params.marks.length - 1].id + 1) : id;\n\n            var mark_content = (content == undefined) ? '' : content;\n\n            if (marker_type == 'point') { // create placemark\n\n                mark_style_house_green.draggable = true;\n\n                place_mark = new ymaps.Placemark(\n                    coords,\n                    {},\n                    mark_style_house_green\n                );\n\n                $map.geoObjects.add(place_mark);\n\n                $map_active = false;\n\n            } else if (marker_type == 'polygon') { // if mark is polygon\n\n                if (coords.length === 2) {\n                    coords = [];\n                };\n\n                polygon_style_green.editorDrawingCursor = 'crosshair';\n                polygon_style_green.editorMaxPoints = 5;\n\n                var place_mark = new ymaps.Polygon(\n                    coords, \n                    {}, \n                    polygon_style_green \n                );\n\n                $map.geoObjects.add(place_mark);\n\n                place_mark.editor.startDrawing();\n\n                var stateMonitor = new ymaps.Monitor(place_mark.editor.state);\n                stateMonitor.add(\"drawing\", function (newValue) {\n                    $map_active = false;\n                });\n\n            } else {\n\n                console.error('Marker type error!');\n                return false;\n\n            }\n\n            place_mark.events.add('dragend', function () {\n                save_map();\n            });\n            place_mark.events.add('editorstatechange', function () {\n                save_map();\n            });\n            place_mark.events.add('geometrychange', function () {\n                save_map();\n            });\n\n            $('.marker-type').val(marker_type).attr('disabled', 'true');\n        }\n\n        /**\n         * Write map data in hidden field\n         */\n        function save_map() {\n\n            $params.zoom = $map.getZoom();\n\n            var coords = $map.getCenter();\n            $params.center_lat = coords[0];\n            $params.center_lng = coords[1];\n\n            var type = $map.getType().split('#');\n            $params.type = (type[1]) ? type[1] : 'map';\n\n            var marks = [];\n            $map.geoObjects.each(function (mark) {\n                if (mark.geometry != null) { // if not collection\n                    var _type = mark.geometry.getType();\n                    marks.push({\n                        id: postID,\n                        content: postID,\n                        type: _type,\n                        coords: mark.geometry.getCoordinates()\n                    });\n                };\n            });\n\n            $params.marks = marks;\n\n            $($input).val(JSON.stringify($params));\n        }\n\n        /**\n         * Geocode object address\n         */\n        function geocode_location(location) {\n\n            console.log(location);\n\n            ymaps.geocode(location, {\n                results: 1\n            }).then(function (res) {\n                var geo_object = res.geoObjects.get(0);\n                var coords = geo_object.geometry.getCoordinates();\n                var bounds = geo_object.properties.get('boundedBy');\n\n                create_mark(coords, 'point', postID, postID);\n\n                $map.setBounds(bounds, {\n                    checkZoomRange: true\n                });\n            });\n        }\n\n    }\n\n\n    if (typeof acf.add_action !== 'undefined') {\n\n        /*\n         *  ready append (ACF5)\n         *\n         *  These are 2 events which are fired during the page load\n         *  ready = on page load similar to $(document).ready()\n         *  append = on new DOM elements appended via repeater field\n         *\n         *  @type\tevent\n         *  @date\t20/07/13\n         *\n         *  @param\t$el (jQuery selection) the jQuery element which contains the ACF fields\n         *  @return\tn/a\n         */\n\n        acf.add_action('ready append', function ($el) {\n\n            // search $el for fields of type 'FIELD_NAME'\n            acf.get_fields({type: 'yandex-map'}, $el).each(function () {\n\n                initialize_field($(this));\n\n            });\n\n        });\n\n\n    } else {\n\n\n        /*\n         *  acf/setup_fields (ACF4)\n         *\n         *  This event is triggered when ACF adds any new elements to the DOM.\n         *\n         *  @type\tfunction\n         *  @since\t1.0.0\n         *  @date\t01/01/12\n         *\n         *  @param\tevent\t\te: an event object. This can be ignored\n         *  @param\tElement\t\tpostbox: An element which contains the new HTML\n         *\n         *  @return\tn/a\n         */\n\n        $(document).on('acf/setup_fields', function (e, postbox) {\n\n            $(postbox).find('.field[data-field_type=\"yandex-map\"]').each(function () {\n\n                initialize_field($(this));\n\n            });\n\n        });\n\n\n    }\n\n\n})(jQuery);"]}